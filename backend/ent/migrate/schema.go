// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// BanksColumns holds the columns for the "banks" table.
	BanksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "bank_type", Type: field.TypeString},
	}
	// BanksTable holds the schema information for the "banks" table.
	BanksTable = &schema.Table{
		Name:        "banks",
		Columns:     BanksColumns,
		PrimaryKey:  []*schema.Column{BanksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// GendersColumns holds the columns for the "genders" table.
	GendersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "gender_name", Type: field.TypeString, Unique: true},
	}
	// GendersTable holds the schema information for the "genders" table.
	GendersTable = &schema.Table{
		Name:        "genders",
		Columns:     GendersColumns,
		PrimaryKey:  []*schema.Column{GendersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// GroupOfAgesColumns holds the columns for the "group_of_ages" table.
	GroupOfAgesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "group_of_age_name", Type: field.TypeString, Unique: true},
		{Name: "group_of_age_age", Type: field.TypeString},
	}
	// GroupOfAgesTable holds the schema information for the "group_of_ages" table.
	GroupOfAgesTable = &schema.Table{
		Name:        "group_of_ages",
		Columns:     GroupOfAgesColumns,
		PrimaryKey:  []*schema.Column{GroupOfAgesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// HospitalsColumns holds the columns for the "hospitals" table.
	HospitalsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "hospital_name", Type: field.TypeString, Unique: true},
	}
	// HospitalsTable holds the schema information for the "hospitals" table.
	HospitalsTable = &schema.Table{
		Name:        "hospitals",
		Columns:     HospitalsColumns,
		PrimaryKey:  []*schema.Column{HospitalsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// InsurancesColumns holds the columns for the "insurances" table.
	InsurancesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "insurance_address", Type: field.TypeString},
		{Name: "insurance_insurer", Type: field.TypeString},
		{Name: "insurance_time_buy", Type: field.TypeTime},
		{Name: "insurance_time_firstpay", Type: field.TypeTime},
		{Name: "hospital_id", Type: field.TypeInt, Nullable: true},
		{Name: "member_id", Type: field.TypeInt, Nullable: true},
		{Name: "officer_id", Type: field.TypeInt, Nullable: true},
		{Name: "product_id", Type: field.TypeInt, Nullable: true},
	}
	// InsurancesTable holds the schema information for the "insurances" table.
	InsurancesTable = &schema.Table{
		Name:       "insurances",
		Columns:    InsurancesColumns,
		PrimaryKey: []*schema.Column{InsurancesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "insurances_hospitals_hospital_insurance",
				Columns: []*schema.Column{InsurancesColumns[5]},

				RefColumns: []*schema.Column{HospitalsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "insurances_members_member_insurance",
				Columns: []*schema.Column{InsurancesColumns[6]},

				RefColumns: []*schema.Column{MembersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "insurances_officers_officer_insurance",
				Columns: []*schema.Column{InsurancesColumns[7]},

				RefColumns: []*schema.Column{OfficersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "insurances_products_product_insurance",
				Columns: []*schema.Column{InsurancesColumns[8]},

				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MembersColumns holds the columns for the "members" table.
	MembersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "member_email", Type: field.TypeString, Unique: true},
		{Name: "member_name", Type: field.TypeString, Unique: true},
		{Name: "member_password", Type: field.TypeString},
	}
	// MembersTable holds the schema information for the "members" table.
	MembersTable = &schema.Table{
		Name:        "members",
		Columns:     MembersColumns,
		PrimaryKey:  []*schema.Column{MembersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// MoneyTransfersColumns holds the columns for the "money_transfers" table.
	MoneyTransfersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "moneytransfer_type", Type: field.TypeString},
	}
	// MoneyTransfersTable holds the schema information for the "money_transfers" table.
	MoneyTransfersTable = &schema.Table{
		Name:        "money_transfers",
		Columns:     MoneyTransfersColumns,
		PrimaryKey:  []*schema.Column{MoneyTransfersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// OfficersColumns holds the columns for the "officers" table.
	OfficersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "officer_email", Type: field.TypeString, Unique: true},
		{Name: "officer_name", Type: field.TypeString, Unique: true},
		{Name: "officer_password", Type: field.TypeString},
	}
	// OfficersTable holds the schema information for the "officers" table.
	OfficersTable = &schema.Table{
		Name:        "officers",
		Columns:     OfficersColumns,
		PrimaryKey:  []*schema.Column{OfficersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PaymentsColumns holds the columns for the "payments" table.
	PaymentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "account_name", Type: field.TypeString},
		{Name: "account_number", Type: field.TypeString},
		{Name: "transfer_time", Type: field.TypeTime},
		{Name: "bank_id", Type: field.TypeInt, Nullable: true},
		{Name: "insurance_id", Type: field.TypeInt, Nullable: true},
		{Name: "member_id", Type: field.TypeInt, Nullable: true},
		{Name: "moneytransfer_id", Type: field.TypeInt, Nullable: true},
	}
	// PaymentsTable holds the schema information for the "payments" table.
	PaymentsTable = &schema.Table{
		Name:       "payments",
		Columns:    PaymentsColumns,
		PrimaryKey: []*schema.Column{PaymentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "payments_banks_bank_payment",
				Columns: []*schema.Column{PaymentsColumns[4]},

				RefColumns: []*schema.Column{BanksColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "payments_insurances_insurance_payment",
				Columns: []*schema.Column{PaymentsColumns[5]},

				RefColumns: []*schema.Column{InsurancesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "payments_members_member_payment",
				Columns: []*schema.Column{PaymentsColumns[6]},

				RefColumns: []*schema.Column{MembersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "payments_money_transfers_moneytransfer_payment",
				Columns: []*schema.Column{PaymentsColumns[7]},

				RefColumns: []*schema.Column{MoneyTransfersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "product_name", Type: field.TypeString, Unique: true},
		{Name: "product_price", Type: field.TypeInt},
		{Name: "product_time", Type: field.TypeInt},
		{Name: "product_payment_of_year", Type: field.TypeFloat64},
		{Name: "gender_id", Type: field.TypeInt, Nullable: true},
		{Name: "group_of_age_id", Type: field.TypeInt, Nullable: true},
		{Name: "officer_id", Type: field.TypeInt, Nullable: true},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "products_genders_genders",
				Columns: []*schema.Column{ProductsColumns[5]},

				RefColumns: []*schema.Column{GendersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "products_group_of_ages_gropages",
				Columns: []*schema.Column{ProductsColumns[6]},

				RefColumns: []*schema.Column{GroupOfAgesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "products_officers_officers",
				Columns: []*schema.Column{ProductsColumns[7]},

				RefColumns: []*schema.Column{OfficersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BanksTable,
		GendersTable,
		GroupOfAgesTable,
		HospitalsTable,
		InsurancesTable,
		MembersTable,
		MoneyTransfersTable,
		OfficersTable,
		PaymentsTable,
		ProductsTable,
	}
)

func init() {
	InsurancesTable.ForeignKeys[0].RefTable = HospitalsTable
	InsurancesTable.ForeignKeys[1].RefTable = MembersTable
	InsurancesTable.ForeignKeys[2].RefTable = OfficersTable
	InsurancesTable.ForeignKeys[3].RefTable = ProductsTable
	PaymentsTable.ForeignKeys[0].RefTable = BanksTable
	PaymentsTable.ForeignKeys[1].RefTable = InsurancesTable
	PaymentsTable.ForeignKeys[2].RefTable = MembersTable
	PaymentsTable.ForeignKeys[3].RefTable = MoneyTransfersTable
	ProductsTable.ForeignKeys[0].RefTable = GendersTable
	ProductsTable.ForeignKeys[1].RefTable = GroupOfAgesTable
	ProductsTable.ForeignKeys[2].RefTable = OfficersTable
}
