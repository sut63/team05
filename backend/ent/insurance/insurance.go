// Code generated by entc, DO NOT EDIT.

package insurance

import (
	"time"
)

const (
	// Label holds the string label denoting the insurance type in the database.
	Label = "insurance"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldInsuranceIdentification holds the string denoting the insurance_identification field in the database.
	FieldInsuranceIdentification = "insurance_identification"
	// FieldInsuranceInsurer holds the string denoting the insurance_insurer field in the database.
	FieldInsuranceInsurer = "insurance_insurer"
	// FieldInsuranceAddress holds the string denoting the insurance_address field in the database.
	FieldInsuranceAddress = "insurance_address"
	// FieldInsuranceTimeBuy holds the string denoting the insurance_time_buy field in the database.
	FieldInsuranceTimeBuy = "insurance_time_buy"
	// FieldInsuranceTimeFirstpay holds the string denoting the insurance_time_firstpay field in the database.
	FieldInsuranceTimeFirstpay = "insurance_time_firstpay"

	// EdgeMember holds the string denoting the member edge name in mutations.
	EdgeMember = "Member"
	// EdgeHospital holds the string denoting the hospital edge name in mutations.
	EdgeHospital = "Hospital"
	// EdgeOfficer holds the string denoting the officer edge name in mutations.
	EdgeOfficer = "Officer"
	// EdgeProduct holds the string denoting the product edge name in mutations.
	EdgeProduct = "Product"
	// EdgeInsurancePayment holds the string denoting the insurance_payment edge name in mutations.
	EdgeInsurancePayment = "insurance_payment"

	// Table holds the table name of the insurance in the database.
	Table = "insurances"
	// MemberTable is the table the holds the Member relation/edge.
	MemberTable = "insurances"
	// MemberInverseTable is the table name for the Member entity.
	// It exists in this package in order to avoid circular dependency with the "member" package.
	MemberInverseTable = "members"
	// MemberColumn is the table column denoting the Member relation/edge.
	MemberColumn = "member_id"
	// HospitalTable is the table the holds the Hospital relation/edge.
	HospitalTable = "insurances"
	// HospitalInverseTable is the table name for the Hospital entity.
	// It exists in this package in order to avoid circular dependency with the "hospital" package.
	HospitalInverseTable = "hospitals"
	// HospitalColumn is the table column denoting the Hospital relation/edge.
	HospitalColumn = "hospital_id"
	// OfficerTable is the table the holds the Officer relation/edge.
	OfficerTable = "insurances"
	// OfficerInverseTable is the table name for the Officer entity.
	// It exists in this package in order to avoid circular dependency with the "officer" package.
	OfficerInverseTable = "officers"
	// OfficerColumn is the table column denoting the Officer relation/edge.
	OfficerColumn = "officer_id"
	// ProductTable is the table the holds the Product relation/edge.
	ProductTable = "insurances"
	// ProductInverseTable is the table name for the Product entity.
	// It exists in this package in order to avoid circular dependency with the "product" package.
	ProductInverseTable = "products"
	// ProductColumn is the table column denoting the Product relation/edge.
	ProductColumn = "product_id"
	// InsurancePaymentTable is the table the holds the insurance_payment relation/edge.
	InsurancePaymentTable = "payments"
	// InsurancePaymentInverseTable is the table name for the Payment entity.
	// It exists in this package in order to avoid circular dependency with the "payment" package.
	InsurancePaymentInverseTable = "payments"
	// InsurancePaymentColumn is the table column denoting the insurance_payment relation/edge.
	InsurancePaymentColumn = "insurance_id"
)

// Columns holds all SQL columns for insurance fields.
var Columns = []string{
	FieldID,
	FieldInsuranceIdentification,
	FieldInsuranceInsurer,
	FieldInsuranceAddress,
	FieldInsuranceTimeBuy,
	FieldInsuranceTimeFirstpay,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Insurance type.
var ForeignKeys = []string{
	"hospital_id",
	"member_id",
	"officer_id",
	"product_id",
}

var (
	// InsuranceIdentificationValidator is a validator for the "insurance_identification" field. It is called by the builders before save.
	InsuranceIdentificationValidator func(string) error
	// InsuranceInsurerValidator is a validator for the "insurance_insurer" field. It is called by the builders before save.
	InsuranceInsurerValidator func(string) error
	// InsuranceAddressValidator is a validator for the "insurance_address" field. It is called by the builders before save.
	InsuranceAddressValidator func(string) error
	// DefaultInsuranceTimeBuy holds the default value on creation for the insurance_time_buy field.
	DefaultInsuranceTimeBuy func() time.Time
)
